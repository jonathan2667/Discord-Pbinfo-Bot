#include <bits/stdc++.h>
#define int short

using namespace std;

ifstream fin("matrix_replace.in");
ofstream fout("matrix_replace.out");

int freq[101][151][151];

void max_self(int &a, int b) {
    a = max(a, b);
}

void min_self(int &a, int b) {
    a = min(a, b);
}

int32_t main() {
    int N, K;
    fin >> N >> K;
    int mx = 0, mn = 128;
    for(int i = 1; i <= N; ++i)
        for(int j = 1; j <= N; ++j) {
            int x;
            fin >> x;
            for(int k = 0; k < 101; ++k)
                freq[k][i][j] = freq[k][i - 1][j] + freq[k][i][j - 1] - freq[k][i - 1][j - 1];
            ++freq[x][i][j];
            max_self(mx, x);
            min_self(mn, x);
        }
    int st = 2, dr = N, dim = 1, changed = 0;
    while(st <= dr) {
        int mid = (st + dr) >> 1,
            S = mid * mid,
            nr = S + 1;
        for(int i1 = 1; i1 <= N - mid + 1; ++i1)
            for(int j1 = 1; j1 <= N - mid + 1; ++j1) {
                int i2 = i1 + mid - 1, j2 = j1 + mid - 1, freq_max = 0;
                for(int k = mn; k <= mx; ++k) {
                    int cnt = freq[k][i2][j2] - freq[k][i2][j1 - 1] - freq[k][i1 - 1][j2] + freq[k][i1 - 1][j1 - 1];
                    max_self(freq_max, cnt);
                }
                if(freq_max + K >= S)
                    min_self(nr, S - freq_max);
            }
        if(nr != S + 1) {
            dim = mid;
            changed = nr;
            st = mid + 1;
        }
        else
            dr = mid - 1;
    }
    fout << dim << ' ' << changed;
}
