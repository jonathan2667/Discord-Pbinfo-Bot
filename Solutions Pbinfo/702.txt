// sursa se utilizeaza faptul ca multiplii de p sunt aranjati sub forma unui fractal

#include <fstream>

using namespace std;

long long n,p;


long long putere(long long a,long long b)
{
    long long q=1,i;
    for(i=1;i<=b;i++)
        q=q*a;
    return q;
}

long long fractal(long long x)
{
    long long t=putere(p,x-1);
    if (x==1) return 0;
         else return p*(p+1)/2*fractal(x-1)+(p-1)*p/2*t*(t-1)/2;

}

int main()
{
    long long k,w;
    ifstream f("pascal.in");
    ofstream g("pascal.out");
    f>>n>>p;

    // determin puterea la care se ridica p ca sa obtinem n+1 (sau log(p,n+1))
    k=0;w=1;
    while (w<=n)
    {
        w=w*p;
        k++;
    }

    // calculez recurent cate 0-uri apar in triunghiul lui pascal scris modulo p
    g<<fractal(k)<<"\n";

    f.close();
    g.close();

    return 0;
}
