#include <algorithm>
# include <fstream>
using namespace std;
ifstream fin("turnuri1.in");
ofstream fout("turnuri1.out");
int C,n,n1,n2;
long long nr_turnuri,max_turn;
int v1[10003],v2[10003],v3;

void citire()
{   int l1,l2,i;
    long long h_turn;
    char cul1,cul2;

    fin>>C>>n;
    fin>>l1>>cul1;
    nr_turnuri=1;h_turn=l1;
    if(cul1=='g') v1[++n1]=l1;
       else v2[++n2]=l1;
    for(i=1; i<=n-1; i++)
    {
        fin>>l2>>cul2;
        if(cul2=='g') v1[++n1]=l2;
           else v2[++n2]=l2;

        if(l2<l1 && cul2!=cul1)
            {h_turn=h_turn+l2;}
        else
            {nr_turnuri++;h_turn=l2;}
        if (h_turn>max_turn) max_turn=h_turn;
        l1=l2;cul1=cul2;
    }
}
bool cmp( int a, int b)
{
    return (a>b);
}
int main()
{
    int i,j,k,p;
    citire();
    if (C==1)
        fout<<nr_turnuri<<' '<<max_turn<<'\n';
    else
    {
        sort(v1+1,v1+1+n1,cmp);
        sort(v2+1,v2+1+n2,cmp);
        v1[n1+1]=500003;
        v2[n2+1]=500002;
        i=1;j=1;k=0;
        if (v1[i]>v2[j])
        {
            ++k;v3=v1[i++];p=1;
        }
        else
        {
            ++k;v3=v2[j++];p=-1;
        }
        while(i<=n1&&j<=n2)
        {
            if(p==1)
            {
                while(j<=n2 && v2[j]>=v3)
                    j++;
                if (j<=n2)
                {++k; v3=v2[j++];p=-p;}
            }
            else
            {
                while(i<=n1 && v1[i]>=v3)
                    i++;
                if(i<=n1)
                {++k;v3=v1[i++];p=-p;}
            }
        }
       if(p==-1)
        for(i;i<=n1;i++)
            if (v1[i]<v3) {++k;v3=v1[i];break;}
       if(p==1)
            for(j;j<=n2;j++)
            if (v2[j]<v3) {++k;v3=v2[j];break;}
       fout<<k<<'\n';
    }
fin.close();
fout.close();
return 0;
}
