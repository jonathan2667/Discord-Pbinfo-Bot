#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#define ll long long

int n, i, cerinta, cnt, ans = 0, nr, cf[30];
ll a[50005], z, x, win, v[30];

void load()
{
    int i, j, k, nr, p, aux;
    int ok; ll x;

    for(i=1; i<=n; ++i)
    {
        scanf("%lld", &x); ///fin >> x;
        //assert(0<x && x<=(1e18));

        nr = 0;
        while(x)
        {
            cf[++nr] = x%10;
            x /= 10;
        }

        for(p = 1 ; p<=nr/2; p++) {aux=cf[p]; cf[p]=cf[nr - p + 1]; cf[nr - p + 1]=aux;}
        //reverse(cf+1, cf+nr+1);

        /// compar reverse(prima jumate) cu a doua jumate
        ok = 1;
        for(j=nr/2+2; ok && j<=nr; ++j)
        {
            k = nr - j + 1;
            if(cf[j] < cf[k]) break;
            if(cf[j] > cf[k]) ok = 0;
        }

        if(ok)
            for(j=nr/2+2; j<=nr; ++j) cf[j] = cf[nr-j+1];
        else
        {
            cf[nr/2+1]++;
            j = nr/2+1;
            while(cf[j] == 10) cf[j] = 0, ++cf[--j];
            for(j=nr/2+2; j<=nr; ++j) cf[j] = cf[nr-j+1];
        }

        a[i] = 0;
        for(j=1; j<=nr; ++j) a[i] = a[i] * 10 + cf[j];
    }
}

int cauta(ll x) /// verific daca x apare in vector
{
    int st = 1, dr = n, mid;
    while(st <= dr)
    {
        mid = (st+dr)/2;
        if(a[mid] == x) return 1;
        if(a[mid] < x) st = mid + 1;
            else dr = mid - 1;
    }
    return 0;
}

int compare (const void * a, const void * b)
{
  if( *(long long*)a - *(long long*)b <0) return -1;
  if( *(long long*)a - *(long long*)b >0) return 1;
  return 0;
}


int main()
{
    freopen("pal.in","r",stdin);
    freopen("pal.out","w",stdout);
    scanf("%d %d",&cerinta, &n);

    load();

    if(cerinta == 1)
    {
        for(i=1; i<=n; ++i) printf("%lld ", a[i]); printf("\n");
        return 0;
    }

    qsort(a + 1, n, sizeof(long long), compare);

    for(i=1; i<=n; ++i)
    {
        z = 1;
        x = a[i];
        cnt = 1;

        while(x >= z*10) z *= 10;
        /// z e puterea de 10 corespunzatoare primei cifre

        while(z>1)
        {
            x = (x % z - x % 10) / 10;
            if(cauta(x)) ++cnt;
            z /= 100;
        }

        if(cnt >= ans) ans = cnt, win = a[i];
    }

    if(cerinta == 2)
    {
        printf("%d\n", ans);
        return 0;
    }

    v[nr = 1] = x = win;
    while(x >= z*10) z *= 10;

    while(z>1)
    {
        x = (x % z - x%10) / 10;
        if(cauta(x)) v[++nr] = x;
        z /= 100;
    }

    for(i=nr; i; --i) printf("%lld ", v[i]); printf("\n");
    return 0;
}
