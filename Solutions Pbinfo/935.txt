#include <fstream>
#include <cmath>
#include <iomanip>
#include <stdlib.h>
#include <time.h>

using namespace std;


ifstream fin ("punctinpoligonsimplu.in");
ofstream fout("punctinpoligonsimplu.out");


int det(int X1, int Y1, int X2, int Y2, int X3, int Y3) {
    return (X2-X1)*(Y3-Y1) - (X3-X1)*(Y2-Y1);
}

int punctPeSegment(int x1, int y1, int x2, int y2, int x3, int y3) {
    int d = det(x1, y1, x2, y2, x3, y3);
    if (d!=0)
        return 0;
    if (x1 == x3 && y1 == y3)
        return 1;
    if (x2 == x3 && y2 == y3)
        return 1;
    if ((x3-x1) * (x3-x2) < 0 || (y3-y1) * (y3-y2) < 0)
        return 1;
    else
        return 0;
}

int n, m, i, j, X1, Y1, intersect, testcurent, X3, Y3, X4, Y4, d1, d2, d3, d4;
pair<int, int> p[102];

int main() {
    fin>>n>>m;
    for (i=1;i<=n;i++)
        fin>>p[i].first>>p[i].second;
    p[0] = p[n];

    int X2 = 1002;
    int Y2 = 0;

    srand(time(0));

    for (j=1;j<=m;j++) {
        fin>>X1>>Y1;
        int ok = 0;
        for (i=0;i<n;i++) {
            if (punctPeSegment(p[i].first, p[i].second, p[i+1].first, p[i+1].second, X1, Y1)) {
                ok = 1;
                break;
            }
        }
        if (ok) {
            fout<<"DA\n";
            continue;
        }

        do {
            X2 = 1002 + rand()%1000;
            Y2 = 1002 + rand()%1000;
            intersect = 0;
            testcurent = 1;
            for (i=0;i<n;i++) {
                X3 = p[i].first;
                Y3 = p[i].second;
                X4 = p[i+1].first;
                Y4 = p[i+1].second;

                d1 = det(X3, Y3, X4, Y4, X1, Y1);
                d2 = det(X3, Y3, X4, Y4, X2, Y2);
                d3 = det(X1, Y1, X2, Y2, X3, Y3);
                d4 = det(X1, Y1, X2, Y2, X4, Y4);

                if (d1 == 0 && d2 == 0) {
                    testcurent = 0;
                    break;
                }
                if (punctPeSegment(X1, Y1, X2, Y2, X3, Y3) || punctPeSegment(X1, Y1, X2, Y2, X4, Y4)) {
                    testcurent = 0;
                    break;
                }

                if (d1 * d2 < 0 && d3 * d4 < 0)
                    intersect++;
            }
            if (testcurent) {
                if (intersect % 2 == 1) {
                    fout<<"DA\n";
                } else {
                    fout<<"NU\n";
                }
                break;
            }
        } while (1);
    }

    return 0;
}
