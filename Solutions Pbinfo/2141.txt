#include <bits/stdc++.h>

using namespace std;

bool a[30000];
int n, m, f[3300], e[3300], k;
int t[30003];

void Ciur()
{
    int i, j;
    for (i = 4; i <= 30000; i += 2)
        a[i] = true;
    for (i = 3; i * i <= 30000; i += 2)
        if (!a[i])
        for (j = i * i; j <= 30000; j = j + 2 * i)
            a[j] = true;
    f[1] = 2;
    k = 1;
    for (i = 3; i <= 30000; i += 2)
        if (!a[i]) f[++k] = i;
}

int CautBin(int x)
{
    int st, dr, mij;
    st = 1; dr = k;
    while (st <= dr)
    {
        mij = (st + dr) / 2;
        if (f[mij] == x) return mij;
        if (f[mij] < x) st = mij + 1;
        else dr = mij - 1;
    }
    return 0;
}

void Descompune(int x, int nrap)
{
    int i;
    i = 1;
    while (x > 1 && f[i]*f[i] <= x)
    {
        while (x % f[i] == 0)
        {
            x /= f[i];
            e[i] += nrap;
        }
        i++;
    }
    if (x > 1)
    {
        i = CautBin(x);
        e[i] += nrap;
    }
}

void Citire()
{
    int i, x;
    ifstream fin("exp.in");
    fin >> m >> n;
    for (i = 1; i <= n; i++)
    {
        fin >> x;
        t[x]++;
    }
    fin.close();
}

void Trick()
{
    int i;
    for (i = 1; i <= 30000; i++)
        if (t[i] > 0) Descompune(i, t[i]);
}

void Afisare()
{
    int i;
    ofstream fout("exp.out");
    for (i = 1; i <= k; i++)
        if (e[i] % m != 0)
        {
            fout << "0\n";
            fout.close();
            return;
        }
        else e[i] /= m;
    fout << "1\n";
    for (i = 1; i <= k; i++)
        if (e[i] > 0)
            fout << f[i] << " " << e[i] << "\n";
    fout.close();
}

int main()
{
    Ciur();
    Citire();
    Trick();
    Afisare();
    return 0;
}
