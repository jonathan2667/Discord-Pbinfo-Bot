///#include <iostream>
#include <fstream>

using namespace std;

ifstream f ("smax.in");
ofstream g ("smax.out");

int n;
short int v[103][103][103];
short int d[103][103][103];


void citeste()
{
    f >> n;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            for (int k = 1; k <= n; k++)
            {
                f >> v[i][j][k];
            }
}
void rezolva()
{
    int i, j, k;
    for ( i = n; i >= 1; i--)
        for ( j = n; j >= 1; j--)
            for ( k = n; k >= 1; k--)
            {
                d[i][j][k] = v[i][j][k] + max(max(d[i + 1][j][k], d[i][j + 1][k]), d[i][j][k + 1]);
            }

    g << 3 * n - 2 << endl << d[1][1][1] << endl;

    i = j = k = 1;
    g << i << ' ' << j << ' ' << k <<endl;
    do
    {
        if (k != n && d[i][j][k] - v[i][j][k] == d[i][j][k + 1]) k++;
        else if (j != n && d[i][j][k] - v[i][j][k] == d[i][j + 1][k]) j++;
        else i++;
        g << i << ' ' << j << ' ' << k << endl;
    }
    while(i != n || j != n || k != n);
}

int main()
{
    citeste();
    rezolva();
    return 0;
}
