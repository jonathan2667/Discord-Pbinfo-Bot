// prof. PIT-RADA VASILE IONEL

#include<fstream>
#include<iostream>
using namespace std;
ifstream  fin("cardinal.in");
ofstream fout("cardinal.out");

int N, p, pprim[5000], x[2][10001], y[2][10001], semn;
int nprim, nx[2], k, i1, i2, A;
long long pr, i, j, z;
char ciur[100002];

int main()
{
    fin>>N>>p;
    A=0;
    nprim=0;
    for(i=2;i*i<=N;i++)
    {
        if(ciur[i]==0)
        {
            pr=1;
            z=i;
            for(j=p+1;j!=0;j>>=1)
            {
                if(j&1)pr=pr*z;
                z=z*z;
            }
            if(pr>N)break;
            nprim++;
            pprim[nprim]=pr;
            x[1][nprim]=pr;
            y[1][nprim]=nprim;
            A=A+N/pr;
            for(j=i+i;j*j<=N;j=j+i)
            {
                ciur[j]=1;
            }
        }
    }
    nx[1]=nprim;
    semn=1;
    for(i=2;i<=9;i++)
    {
        semn=-semn;
        i2=i%2;
        i1=1-i2;
        nx[i2]=0;
        for(j=1;j<=nx[i1];j++)
        {
            for(k=1+y[i1][j];k<=nprim;k++)
            {
                if((long long)x[i1][j]*pprim[k]<=N)
                {
                    nx[i2]++;
                    x[i2][nx[i2]]=x[i1][j]*pprim[k];
                    y[i2][nx[i2]]=k;
                    A=A+semn*(N/x[i2][nx[i2]]);
                }
                else
                {
                    break;
                }
            }
        }
    }
    fout<<N-A-1;

    fout.close();
    fin.close();
    return 0;
}



