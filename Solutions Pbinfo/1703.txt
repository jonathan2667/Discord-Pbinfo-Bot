//prof. Marinel Serban
#include <bits/stdc++.h>

using namespace std;

ifstream fin("parchet.in");
ofstream fout("parchet.out");

int Casa[255][255], Camere[210], N, M, S, nr_camere, Cerinta;

void Citire()
{
    int i, j;
    char X[255];
    fin >> Cerinta;
    fin >> N >> M;  //dimensiuni casa
    fin >> S;       //suprafata parchet
    fin.get();      //ENTER
    for (i = 1; i <= N; ++i)
    {
        fin.getline(X, 255);                     //citesc o linie
        for (j = 0; j < M; ++j)
            Casa[i][j+1] = (X[j] == 'P' ? -1 : 0);//-1 perete; 0 spatiu
    }
}

int Suprafata(int l, int c, int nr)
{
    struct element
    {
        short int lin, col;
    } C[100000], X;
    int dl[] = {-1, 0, 1, 0};
    int dc[] = {0, 1, 0, -1};
    int ic = 0, sc = -1, k, l9, c9, S = 1;
    Casa[l][c] = nr;
    sc++;
    C[sc].lin = l;
    C[sc].col = c;
    while (ic <= sc)
    {
        X = C[ic++];
        for (k = 0; k < 4; k++)
        {
            l9 = X.lin + dl[k];
            c9 = X.col + dc[k];
            if (Casa[l9][c9] == 0)
            {
                S++;
                Casa[l9][c9] = nr;
                sc++;
                C[sc].lin = l9;
                C[sc].col = c9;
            }
        }
    }
    return S;
}

void Suprafete_camere()
{
    int i, j;
    for (i = 2; i < N; ++i)
        for (j = 2; j < M; ++j)
            if (Casa[i][j] == 0)      //camera goala - inca neprelucrata
            {
                nr_camere++;
                Camere[nr_camere] = Suprafata(i, j, nr_camere);
            }
}

int Criteriu(int A, int B)
{
    return A > B;
}

void Cerinta_a()
{
    int SS = S, i = 1;
    int Cate_se_parcheteaza = 0;
    sort(Camere + 1, Camere + nr_camere + 1, Criteriu);
    while (i <= nr_camere && SS >= Camere[i])
    {
        Cate_se_parcheteaza++;
        SS -= Camere[i];
        i++;
    }
    if (Cerinta == 1)    
       fout << Cate_se_parcheteaza << ' ' << SS << '\n';
}

void Cerinta_b()
{
    int Contor = 0, nrsel, NRSEL = 0, Suprafata, i;
    int b2[100] = {0};
    while (!b2[0])
    {
        i = nr_camere;
        while (b2[i]) b2[i--] = 0;
        b2[i] = 1;
        Suprafata = 0;
        nrsel = 0;
        for (i = 1; i <= nr_camere; i++)
            if (b2[i])
            {
                Suprafata += Camere[i];
                nrsel++;
            }
        if (Suprafata == S)
        {
            if (nrsel > NRSEL)
            {
                NRSEL = nrsel;
                Contor = 1;
            }
            else
                if (nrsel == NRSEL)
                    Contor++;
        }
    }
//  if (Contor)
//  {
//      fout << "S = " << S << '\n';
        if (Cerinta == 2)
                   fout << Contor << '\n';
//      fout << "=================\n";
//  }
}

int main()
{
    Citire();
    Suprafete_camere();
    //fout << "nr  camere " << nr_camere << '\n';
    //while (S > 0)
    // {
        Cerinta_a();
        Cerinta_b();
    //  S--;
    // }
    return 0;
}

/*
int main()
{
    int i, k;
    fout << "202 202\n";
    fout << "35671\n";
    for (i = 1; i <= 202; i++) fout << 'P'; fout << '\n';
    for (k = 1; k <= 200; k++)
    {
        fout << 'P';
        for (i = 1; i <= 200; i++) fout << 'S';
        fout << "P\n";
    }
    for (i = 1; i <= 202; i++) fout << 'P'; fout << '\n';
    return 0;
}
*/
