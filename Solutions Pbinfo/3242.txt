#include <fstream>
#include <vector>
#define N 1000000
#define M 100001
using namespace std;
ifstream f("pdi.in");
ofstream g("pdi.out");
int n, i, j, sol, p, d;
int a[M], v[N+1], maxi[N+1], dp[M];
vector<int> pr[N+1];

void eratostene()
{
    v[1] = 1;
    for(i = 2; i <= N; i++)
        if(v[i] == 0)
    {
        pr[i].push_back(i);
        j = i + i;
        while(j <= N)
        {
            pr[j].push_back(i);
            v[j] = 1;
            j = j + i;
        }
    }
}

int main()
{
    f >> n;
    for(i = 1; i <= n; i++)
        f >> a[i];
    eratostene();
    sol = 0;
    for(i = 1; i <= n; i++)
    {
        dp[i] = 0;
        d = pr[a[i]].size();
        for(j = 0; j < d; j++)
        {
            p = pr[a[i]][j];
            if(maxi[p] > dp[i])
                dp[i] = maxi[p];
        }
        dp[i]++;
        for(j = 0; j < d; j++)
        {
            p = pr[a[i]][j];
            if(dp[i] > maxi[p])
                maxi[p] = dp[i];
        }
        if(dp[i] > sol)
            sol = dp[i];
    }
    g << sol;
    return 0;
}
