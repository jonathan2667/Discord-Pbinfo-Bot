/* Andrei Parvu
   ONI 2014
*/

#include <cstdio>
#include <cassert>
#include <algorithm>

using namespace std;

const int NMAX = 500000;
const int TMAX = 15;
const int EL_MAX = 1e9;

int potential[TMAX];

int main() {
  freopen("avarcolaci.in", "rt", stdin);
  freopen("avarcolaci.out", "wt", stdout);

  int nrTests;

  scanf("%d", &nrTests);

  assert(1 <= nrTests && nrTests <= TMAX);

  for (int test = 1; test <= nrTests; test++) {
    int n;

    scanf("%d", &n);
    assert(1 <= n && n <= NMAX);
    int maj = -1, cnt = 0;

    for (int i = 0; i < 2 * n; i++) {
      int el;
      scanf("%d", &el);

      assert(0 <= el && el <= EL_MAX);

      if (maj == -1) {
        maj = el;
        cnt = 1;
      } else {
        if (el == maj) {
          cnt++;
        } else {
          cnt--;

          if (cnt == 0) {
            maj = el;
            cnt = 1;
          }
        }
      }
    }

    potential[test] = maj;
  }

  fclose(stdin);
  freopen("avarcolaci.in", "rt", stdin);

  scanf("%d", &nrTests);

  for (int test = 1; test <= nrTests; test++) {
    int n;

    scanf("%d", &n);

    int cnt = 0;
    for (int i = 0; i < 2 * n; i++) {
      int x;
      scanf("%d", &x);

      if (x == potential[test]) {
        cnt++;
      }
    }

    if (cnt > n) {
      printf("%d\n", potential[test]);
    } else {
      // Problema e mai clasica ca Mozart
      printf("Mozart\n");
    }
  }

  return 0;
}

