//Implementare solutie optima (cu string-uri)
#include <iostream>
#include <fstream>
#include <string>

using namespace std;
ofstream out("constructpalindrom.out");

bool isPalindrom(string sir, int left, int right)
{
    for(int i = left, j = right; i < j; ++i,--j)
        if( sir[i] != sir[j])
            return false;
    return true;
}

int T;
int main()
{
    ifstream in("constructpalindrom.in");

    in >> T;
    for(; T; --T)
    {

        string sir;
        in >> sir;

        int dimension = sir.length() - 1;

        if(isPalindrom(sir,0,dimension))
            out << "YES" << '\n';
        else
        {
            int min_poz_i = -1;
            int min_poz_j = -1;
            for(int i = 0, j = dimension; i < j; i++,j--)
                if(sir[i] != sir[j])
                {
                    min_poz_i = i;
                    min_poz_j = j;
                    break;
                }

            string copieSir="";
            copieSir += sir;
        //    cout << min_poz_i << " " << min_poz_j << " ";
            sir.erase(min_poz_i,1);
     //       cout <<"Simplu " << sir << " ";
            if(isPalindrom(sir,0,sir.length()-1))
            {
                out << "YES" << '\n';
                continue;
            }


            copieSir.erase(min_poz_j,1);
        //    cout  << "Compus " << copieSir << " ";
            if(isPalindrom(copieSir,0,copieSir.length()-1))
            {
                out << "YES" << '\n';
                continue;
            }

            out << "NO" << '\n';
        }
    }


    return 0;

}