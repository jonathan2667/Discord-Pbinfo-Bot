//Emanuela Cerchez - 100 puncte
#include <fstream>
#include <cassert>
#define NMAX 502

using namespace std;

int n, m, xs, ys, nr_fav, pct_max, cerinta;
char a[NMAX][NMAX];
int pct[NMAX][NMAX];
int dl[5]={0,0,-1,0,1};
int dc[5]={0,1,0,-1,0};

ifstream fin("arrows.in");
ofstream fout("arrows.out");

void citire();
int goxy(int, int);

int main()
{int i, j;
 citire();
 for (i=1; i<=n; i++)
      for (j=1; j<=m; j++)
          if (!pct[i][j])
             goxy(i,j);

if (cerinta==1) {
 if (pct[xs][ys]<0) fout<<-pct[xs][ys]<<'\n';
    else fout<<1000*pct[xs][ys]<<'\n';
}
else
{
 for (i=1; i<=n; i++)
      for (j=1; j<=m; j++)
           if (pct[i][j]>0)
                {
                    nr_fav++;
                    if (pct_max<1000*pct[i][j]) pct_max=1000*pct[i][j];
                }
                else
                {
                    if (pct_max<-pct[i][j]) pct_max=-pct[i][j];
                }
 if (cerinta==2)    
    fout<<nr_fav<<'\n';
    else 
    fout<<pct_max<<'\n';
} 
   fout.close();
   return 0;
}

void citire()
{int i, j, x;
 fin>>cerinta>>n>>m;
 assert(1<= cerinta && cerinta <=3);
 assert(0<n && n<501);
 assert(0<m && m<501);
 for (i=1; i<=n; i++)
     for (j=1; j<=m; j++)
        {
            assert(fin>>x);
            a[i][j]=x;
            assert(x>0 && x<5);
        }
  fin>>xs>>ys;
  assert(0<xs && xs<=n);
  assert(0<ys && ys<=m);
  assert(!(fin>>i));
}

int goxy(int x, int y)
{
int sum=0, dir, cx=x, cy=y, s;
while (a[x][y] && !pct[x][y])
       {pct[x][y]=1; sum++;
        dir=a[x][y];
        x+=dl[dir]; y+=dc[dir];
        }

//completarea punctajelor in pct
if (!a[x][y] || pct[x][y]<0) //pozitie nefavorabila
   {sum-=pct[x][y]; x=cx, y=cy; s=-sum;
    while (pct[x][y]==1)
       {pct[x][y]=s; s++;
        dir=a[x][y];
        x+=dl[dir]; y+=dc[dir];
       }
    return -sum; //pozitie nefavorabila
   }

if (pct[x][y]==1) //pozitie favorabila de pe acelasi traseu
   {
    //se formeaza un circuit care contine pozitia x,y
    //toate punctele de pe circuit se marcheaza cu acelasi punctaj
    s=sum;
    while (cx!=x || cy!=y)
          {
            pct[cx][cy]=s; s--;
            dir=a[cx][cy];
            cx+=dl[dir]; cy+=dc[dir];
          }
    //punctele de pe circuit le marchez cu s
    while (pct[x][y]==1)
          {pct[x][y]=s;
           dir=a[x][y];
           x+=dl[dir];  y+=dc[dir];
          }
   return sum;
   }
//pozitie favorabila care conduce catre un circuit
 s=sum+pct[x][y];
 while (cx!=x || cy!=y)
       {
        pct[cx][cy]=s; s--;
        dir=a[cx][cy];
        cx+=dl[dir]; cy+=dc[dir];
        }
return sum+pct[x][y];
}

