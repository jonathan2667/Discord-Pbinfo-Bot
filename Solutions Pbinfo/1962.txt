#include <iostream>
#include <fstream>
#define NN 1000
using namespace std;

ifstream fin("vecini_buni.in");
ofstream fout("vecini_buni.out");

int n , m , k;
char A[3][NN + 2];
//               
const int di[]= {0, 0, 1,-1, 1, 1,-1,-1},
          dj[]= {1,-1, 0, 0, 1,-1, 1,-1};
          
int NrB(int i , int j){
    int cnt = 0;
    for(int k = 0 ; k < 8 ; k ++)
        if(A[i][j] == A[i+di[k]][j+dj[k]])
            cnt ++;
    return cnt;
}

int main()
{
    int vmax = 0 , cnt;
    
    fin >> n >> m >> k;
    
    A[0][0] = A[1][0] = A[2][0] = 2;
    A[0][m + 1] = A[1][m + 1] = A[2][m + 1] = 2;
    
    for(int j = 1 ; j <= m ; j ++)
        A[1][j] = 2;
    int p , q;
    do
    {
        fin >> p >> q; 
        k --;
        if(p == 1)
            A[2][q] = 1;
    }
    while(k > 0 && p == 1);
    for(int i = 2 ; i <= n ; i ++)
    {
        for(int j = 1; j <= m ; j ++)
            A[0][j]  = A[1][j], A[1][j] = A[2][j];
        for(int j = 1 ; j <= m ; j ++)
            A[2][j] = 0;
        while(k && p == i)
        {
            A[2][q] = 1;
            fin >> p >> q, k --;
        }
        if(p == i)
            A[2][q] = 1;
        
        for(int j = 1 ; j <= m ; j ++)
        {
            int c = NrB(1 , j);
            if(c > vmax)
                vmax = c, cnt = 1;
            else
                if(c == vmax)
                    cnt ++;
        }
    }
    for(int j = 1; j <= m ; j ++)
        A[0][j]  = A[1][j], A[1][j] = A[2][j];
    for(int j = 1 ; j <= m ; j ++)
        A[2][j] = 2;
    for(int j = 1 ; j <= m ; j ++)
    {
        int c = NrB(1 , j);
        if(c > vmax)
            vmax = c, cnt = 1;
        else
            if(c == vmax)
                cnt ++;
    }
    fout << vmax << " " << cnt;
    fin.close(), fout.close();
    return 0;
}
