program poarta;
const p=997;
var f,g:text;
n,m,k,x,y,x2,y2:integer;
a,b:array[1..5000]of integer;
mat:array[1..100,1..100]of integer;
d,d2:integer;i,min1,min2:integer;nr,nr2,numar1,numar2:longint;
{citirea datelor de intrare}
procedure citire;
var i:integer;
begin
assign(f,'poarta.in');
reset(f);
readln(f,n,m,k);
readln(f,x,y,x2,y2);
for i:=1 to k do
    readln(f,a[i],b[i]);
close(f);
end;

function numar(x,y,x2,y2:integer):integer;
var n,m:integer;i,j:integer;
begin
{calculul numarul de trasee dintre pozitiile de
coordonate (x,y) si (x2,y2) prin programare dinamica}
n:=abs(x-x2)+1;
m:=abs(y-y2)+1;
for j:=1 to  m do mat[1,j]:=1;
for i:=2 to n do
    begin
    mat[i,1]:=1;
    for j:=2 to m do
        mat[i,j]:=((mat[i,j-1]mod p)+(mat[i-1,j]mod p))mod p;
    end;
numar:=mat[n,m];
end;
begin
citire;
{calculul distantei si traseelor directe}
d:=abs(x-x2)+abs(y-y2);
nr:=numar(x,y,x2,y2);
if k<>0 then
   begin
   {calculul distantei minime de la punctul de plecare la
   portile stelare si numarul de trasee ce respecta distanta respectiva}
   min1:=32000;numar1:=0;
   for i:=1 to k do
       begin
       d2:=abs(x-a[i])+abs(y-b[i]);
       if d2<min1 then begin min1:=d2;numar1:=numar(x,y,a[i],b[i]);end
       else if d2=min1 then numar1:=(numar1+numar(x,y,a[i],b[i]))mod p;
       end;
   {calculul distantei minime de la punctul de sosire la
   portile stelare si numarul de trasee ce respecta distanta respectiva}
   min2:=32000;numar2:=0;
   for i:=1 to k do
       begin
       d2:=abs(x2-a[i])+abs(y2-b[i]);
       if d2<min2 then begin min2:=d2;numar2:=numar(x2,y2,a[i],b[i]) end
       else if d2=min2 then numar2:=(numar2+numar(x2,y2,a[i],b[i]))mod p;
       end;
   {distanta minima si numarul de trasee folosind porti stelare}
   d2:=min1+min2+1;
   nr2:=((numar1 mod p)*(numar2 mod p))mod p;
   {rezultatul final}
   if d2<d then begin d:=d2;nr:=nr2;end
   else if d2=d then nr:=(nr+nr2)mod p;
   end;
assign(g,'poarta.out');
rewrite(g);
writeln(g,d);
write(g,nr);
close(g);
end.