#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
const int kc=12,nmax=1+kc*kc*kc*kc*kc;
int a[nmax];//vector de frecventa
char     o[13],  // literele ordonate
     cmin[6],// cuvantul minim(primul)
     cmax[6],// cuvantul maxim(ultimul)
     cu[6],s[6];
int nrcuv=0, //nr de cuvinte distincte
    l[30],  // codul corespunzator fiecarei litere
    vmin=nmax,    //valoarea cuvantului minim
    vmax=-1,    //valoarea cuvantului maxim
    n,         //nr de cuvinte
    i,vc,p,j;
//determina valoarea unui cuvant

int  val(char *c)
{
    int s=0,p=1,i;
    for(i=4;i>=0;i--)
    {
        s+=p*l[c[i]-'a'];
        p*=kc;
    }
    return s;
}

char * cuv(int n)
{ char i;
  s[5]=0;
  for(i=4;i>=0;i--)
   {
       s[i]=o[n%12];
       n/=12;
   }
   return s;
}
int main()
{   FILE *fi=fopen("zimeria.in","r");
    FILE *fo=fopen("zimeria.out","w");
    fscanf(fi,"%d\n%d\n",&p,&n);
    fscanf(fi,"%s\n",o);
    for(i=0;i<12;i++)l[o[i]-'a']=i;//pregatim vectorul de calcul
    for(i=1;i<=n;i++)
    {
        fscanf(fi,"%s\n",cu);
        vc=val(cu);
        if(vc>vmax)vmax=vc;
        if(vc<vmin)vmin=vc;
        if(a[vc]==0)nrcuv++;//numaram cuvintele distincte
        a[vc]++;
    }
    if(p==1)fprintf(fo,"%d",nrcuv);
        else
        {   cu[5]=0;
            for(i=vmin;i<=vmax;i++)
             if(a[i]!=0)
            {strcpy(cu,cuv(i));
             for(j=1;j<=a[i];j++)fprintf(fo,"%s\n",cu);
            }
        }
    fclose(fi);
    fclose(fo);
    return 0;
}
