/*
  Implementare: Dan Pracsiu
  Complexitate timp: O(k*m*n)
  Memorie O(m*n)
*/
#include<bits/stdc++.h>
#define InFile  "cod2.in"
#define OutFile "cod2.out"
#define nmax 260
using namespace std;

int c[nmax],x[nmax],y[nmax],k,m,n;
int A[nmax][nmax],B[nmax][nmax];

void ReadData()
{
 int i;
 freopen(InFile,"r",stdin);
 scanf("%d %d %d",&k,&m,&n);
 for (i=1;i<=k;i++) scanf("%d",c+i);
 for (i=1;i<=m;i++) scanf("%d",x+i);
 for (i=1;i<=n;i++) scanf("%d",y+i);
}

void Init()
{
 int i,j,max;
 for (i=1;i<=n;i++)
    if (x[1]==y[i]) B[1][i]=1;
       else B[1][i]=B[1][i-1];
 for (i=1;i<=m;i++)
    if (x[i]==y[1]) B[i][1]=1;
       else B[i][1]=B[i-1][1];
 for (i=2;i<=m;i++)
   for (j=2;j<=n;j++)
     {
      if (x[i]==y[j]) B[i][j] = 1+B[i-1][j-1];
     else
       {
        max = B[i-1][j];
        if (max < B[i][j-1]) max = B[i][j-1];
        B[i][j] = max;
       }
     }
}

int Solve()
{
 int i,j,p,maxim,lin,col;
 Init();
 lin = 1;
 col = 1;
 for (p=1;p<=k;p++)
  {
   /* Transfer B in A */
   for (i=1;i<=m;i++)
     for (j=1;j<=n;j++) A[i][j]=B[i][j];

   /* Calculez B(p,i,j) */
   for ( ;x[lin] != c[p];lin++) ;
   for ( ;y[col] != c[p];col++) ;

   for (i=1;i<lin;i++)
      for (j=1;j<=n;j++) B[i][j] = 0;
   for (i=1;i<col;i++)
      for (j=1;j<=m;j++) B[j][i] = 0;

   for (i=lin;i<=m;i++)
     for (j=col;j<=n;j++)
       if ((c[p]==x[i]) && (x[i]==y[j])) B[i][j] = 1+A[i-1][j-1];
       else if ((c[p]!=x[i]) && (x[i]==y[j])) B[i][j]=1+B[i-1][j-1];
          else
        {
         maxim = B[i-1][j];
         if (maxim < B[i][j-1]) maxim = B[i][j-1];
         B[i][j] = maxim;
        }
  }
 return B[m][n];
}

void PrintSol(int sol)
{
 freopen(OutFile,"w",stdout);
 printf("%d\n",sol);
}

int main()
{
 int sol;
 ReadData();
 sol = Solve();
 PrintSol(sol);
 return 0;
}
